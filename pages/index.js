/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'


import Link from 'next/link';
import React, { useState, useEffect, useCallback } from 'react';
import axios from 'axios';
import Eastern from '@/components/NHL/Eastern'
import Western from '@/components/NHL/Western'
import WJCgroupA from '@/components/WJC/GroupA'
import WJCgroupB from '@/components/WJC/GroupB'
import EasternKHL from '@/components/KHL/Eastern'
import WesternKHL from '@/components/KHL/Western'
import { useSelector, useDispatch } from 'react-redux';
import { selectYear } from '@/reduxFile/selectYearSlice';



const NHL = 'https://hockey-live-sk-data.p.rapidapi.com/table/NHL/2023'
const KHL = 'https://hockey-live-sk-data.p.rapidapi.com/table/KHL/2023'
const WCH = 'https://hockey-live-sk-data.p.rapidapi.com/table/WCH/2023'
const WJC = 'https://hockey-live-sk-data.p.rapidapi.com/table/WJC/2023'



const Home= () => {

   const dispatch = useDispatch()
    const year = useSelector((state) => state.year.year);
    //console.log('redux year', typeof year) ok

  const [selectedYear, setSelectedYear] = useState('');


   useEffect(() => {
    console.log('useState year', selectedYear);
    dispatch(selectYear(selectedYear))
  }, [selectedYear, dispatch]);





 const [data, setData] = useState()
 const fetchGameData = useCallback(async ()=> {
  
  //  https://hockey-live-sk-data.p.rapidapi.com/game/{id}?key={API_key}

 const options = {
    method: 'GET',
    url: 'https://hockey-live-sk-data.p.rapidapi.com/game/1596',
    params: {
      key: process.env.NEXT_PUBLIC_API_KEY2,
      tz: 'America/New_York'
    },
    headers: {
      'X-RapidAPI-Key': process.env.NEXT_PUBLIC_API_KEY,
      'X-RapidAPI-Host': 'hockey-live-sk-data.p.rapidapi.com'
    }
  };

    try {
      const res = await axios.request(options);
      console.log(res.data);
      setData(res.data)
    } catch (error) {
      
      console.log(error)
    }
  }, []);  // Dependencies array

  useEffect(() => {
    fetchGameData();
   
    const intervalId = setInterval(fetchGameData, 5000000);

    return () => clearInterval(intervalId);
  }, [fetchGameData]);
 


 


  const [selectedLeague, setSelectedLeague] = useState('nhl');

  const handleChange = (event) => {
     setSelectedLeague(event.target.value);
  }



  

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container-fluid">
        <h3>main page</h3>
      </div>

   


      <style>{`

      
      `}</style>
    </>
  )
        }



/* 

d6d5dbc87cmsh5634c57b4efd5b5p1af87bjsn95fbf2d4a0c5
*/

export default Home