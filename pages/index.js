/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'


import Link from 'next/link';
import React, { useState, useEffect, useRef, useCallback } from 'react';
import axios from 'axios';
import { useSelector, useDispatch } from 'react-redux';
import { fetchNHLStandings } from '@/reduxFile/nhlStandingsSlice'
import Eastern from '@/components/NHL/Eastern'
import Western from '@/components/NHL/Western'
import WJCgroupA from '@/components/WJC/GroupA'
import WJCgroupB from '@/components/WJC/GroupB'
import EasternKHL from '@/components/KHL/Eastern'
import WesternKHL from '@/components/KHL/Western'



const NHL = 'https://hockey-live-sk-data.p.rapidapi.com/table/NHL/2023'
const KHL = 'https://hockey-live-sk-data.p.rapidapi.com/table/KHL/2023'
const WCH = 'https://hockey-live-sk-data.p.rapidapi.com/table/WCH/2023'
const WJC = 'https://hockey-live-sk-data.p.rapidapi.com/table/WJC/2023'



const Home= () => {


  const dispatch = useDispatch();
  const nhl_standings = useSelector(state => state.nhlStandings.data);
  const status = useSelector(state => state.nhlStandings.status);
  const error = useSelector(state => state.nhlStandings.error);
/* 
  useEffect(() => {
    dispatch(fetchNHLStandings());
  }, [dispatch]);

  console.log('tablesss', nhl_standings) */
 /* 

 const [data, setData] = useState()
 const fetchGameData = useCallback(async ()=> {
  
 const options = {
    method: 'GET',
    url: 'https://hockey-live-sk-data.p.rapidapi.com/table/KHL/2023',
    params: {
      key: process.env.NEXT_PUBLIC_API_KEY2,
      tz: 'America/New_York'
    },
    headers: {
      'X-RapidAPI-Key': process.env.NEXT_PUBLIC_API_KEY,
      'X-RapidAPI-Host': 'hockey-live-sk-data.p.rapidapi.com'
    }
  };

    try {
      const res = await axios.request(options);
      console.log(res.data);
      setData(res.data)
    } catch (error) {
      
      console.log(error)
    }
  }, []);  // Dependencies array

  useEffect(() => {
    fetchGameData();
   
    const intervalId = setInterval(fetchGameData, 5000000);

    return () => clearInterval(intervalId);
  }, [fetchGameData]);
 */


 


  const [selectedLeague, setSelectedLeague] = useState('nhl');

  const handleChange = (event) => {
     setSelectedLeague(event.target.value);
  }



  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="main-container">

          {/* Left Side */}
           <div className="left-side-column">

              <p className='lead ms-2 mt-2'>Select League</p>
              <ul className="list-group">
                {['NHL', 'KHL', 'WJC', 'WCH', 'OG'].map((league) => (
                  <li className="list-group-item" key={league}>
                    <input
                      className="form-check-input me-1"
                      type="radio"
                      name="listGroupRadio"
                      value={league.toLowerCase()}
                      id={league}
                      onChange={handleChange}
                      checked={selectedLeague === league.toLowerCase()}
                    />
                    <label className="form-check-label ms-2" htmlFor={league}>
                      {league}
                    </label>
                  </li>
                ))}
              </ul>
            </div>

           {/* middle box */}
          <div className="middle-column">
             <div className="container-fluid">

                  <div className="row d-flex justify-content-evenly my-5">
                       {
                        selectedLeague === 'nhl' && (
                          <>
                            <Eastern/>
                            <Western/>
                          </>
                        )
                       }

                       {
                        selectedLeague === 'wjc' && (
                          <>
                            <WJCgroupA />
                            <WJCgroupB/>
                          </>
                        )
                       }

                       {
                        selectedLeague === 'khl' && (
                          <>
                            <EasternKHL/>
                            <WesternKHL/>
                          </>
                        )
                       }

                       {
                        selectedLeague === 'wch' && (
                          <>
                             <p className='fs-5 fw-semibold text-center'>Coming Soon</p>
                          </>
                        )
                       }

                       {
                        selectedLeague === 'og' && (
                          <>
                           <p className='fs-5 fw-semibold text-center'>Coming Soon</p>
                          </>
                        )
                       }



                      
                       
  
                  </div>
                </div>
          </div>

           {/* Right Side */}
          <div className="side-column">  </div>

        </div>

   


      <style>{`

      .hover:hover {
        background-color: #ffffff;
      }

      .main-container {
          display: grid;
          grid-template-columns: max-content 1fr max-content;
          gap: 0; 
        }

        .side-column {
          min-width: 300px;
          background: #f0f0f0;
        }

        .left-side-column {
           max-width: 200px;
           padding-left: 30px;
        }

        .middle-column {
          
        }
       
        .team-box {
          position: relative;
          padding: 16px 0!important;
   
        }

       .team-box:nth-child(even) { 
              background-color: #f7f7f7;
          }

       .team-box:nth-child(odd) { 
              background-color: #ffffff;
          }
      
      `}</style>
    </>
  )
        }



/* 

d6d5dbc87cmsh5634c57b4efd5b5p1af87bjsn95fbf2d4a0c5
*/

export default Home