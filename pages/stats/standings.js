/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'


import Link from 'next/link';
import React, { useState, useEffect } from 'react';

import Eastern from '@/components/NHL/Eastern'
import Western from '@/components/NHL/Western'
import WJCgroupA from '@/components/WJC/GroupA'
import WJCgroupB from '@/components/WJC/GroupB'
import EasternKHL from '@/components/KHL/Eastern'
import WesternKHL from '@/components/KHL/Western'
import { useSelector, useDispatch } from 'react-redux';
import { selectYear } from '@/reduxFile/selectYearSlice';



const NHL = 'https://hockey-live-sk-data.p.rapidapi.com/table/NHL/2023'
const KHL = 'https://hockey-live-sk-data.p.rapidapi.com/table/KHL/2023'
const WCH = 'https://hockey-live-sk-data.p.rapidapi.com/table/WCH/2023'
const WJC = 'https://hockey-live-sk-data.p.rapidapi.com/table/WJC/2023'



const Home= () => {

   const dispatch = useDispatch()
    const year = useSelector((state) => state.year.year);
    //console.log('redux year', typeof year) ok

  const [selectedYear, setSelectedYear] = useState('');


   useEffect(() => {
    console.log('useState year', selectedYear);
    dispatch(selectYear(selectedYear))
  }, [selectedYear, dispatch]);



  const handleChangeYear = (event) => {
    setSelectedYear(event.target.value);
  };

/* 
  useEffect(() => {
    dispatch(fetchNHLStandings());
  }, [dispatch]);

  console.log('tablesss', nhl_standings) */
 /* 

 const [data, setData] = useState()
 const fetchGameData = useCallback(async ()=> {
  
 const options = {
    method: 'GET',
    url: 'https://hockey-live-sk-data.p.rapidapi.com/table/KHL/2023',
    params: {
      key: process.env.NEXT_PUBLIC_API_KEY2,
      tz: 'America/New_York'
    },
    headers: {
      'X-RapidAPI-Key': process.env.NEXT_PUBLIC_API_KEY,
      'X-RapidAPI-Host': 'hockey-live-sk-data.p.rapidapi.com'
    }
  };

    try {
      const res = await axios.request(options);
      console.log(res.data);
      setData(res.data)
    } catch (error) {
      
      console.log(error)
    }
  }, []);  // Dependencies array

  useEffect(() => {
    fetchGameData();
   
    const intervalId = setInterval(fetchGameData, 5000000);

    return () => clearInterval(intervalId);
  }, [fetchGameData]);
 */


 


  const [selectedLeague, setSelectedLeague] = useState('nhl');

  const handleChange = (event) => {
     setSelectedLeague(event.target.value);
  }





  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className='container-fluid'>

        <div className="row justify-content-center my-5">

          <div className="col-11 col-md-2 border py-5 px-3 rounded-3 mb-5">
              <form className='mt-3'>
                <label htmlFor="years" className='me-2'>Choose a year:</label>
                <select name="years" id="years" value={selectedYear} onChange={handleChangeYear}>
                  <option value="">Year</option>
                  <option value="2023">2023</option>
                  <option value="2022">2022</option>
                  <option value="2021">2021</option>
                  <option value="2020">2020</option>
                  <option value="2019">2019</option>
                </select>
              </form>
              <hr />

              {
                selectedYear !== '' && (
                  <>
                   <p className='lead ms-2 mt-2 mb-0'>Select League</p>
                   <p className='lead ms-2 my-0'>Year {selectedYear}</p>
                   <ul className="list-group">
                    {['NHL', 'KHL', 'WJC', 'WCH', 'OG'].map((league) => (
                      <li className="list-group-item" key={league}>
                        <input
                          className="form-check-input me-1"
                          type="radio"
                          name="listGroupRadio"
                          value={league.toLowerCase()}
                          id={league}
                          onChange={handleChange}
                          checked={selectedLeague === league.toLowerCase()}
                        />
                        <label className="form-check-label ms-2" htmlFor={league}>
                          {league}
                        </label>
                      </li>
                    ))}
                  </ul>
                  </>
                )
              }
          </div>

          <div className="col-11 col-md-5 p-2">
                    
                     {
                        selectedLeague === 'nhl' && (
                          <>
                            <h3 className='text-center'>NHL</h3>
                            <div className='d-flex justify-content-evenly'>
                              <Eastern/>
                              <Western/>
                            </div>
                          </>
                        )
                       }

                       {
                        selectedLeague === 'wjc' && (
                          <>
                             <h3 className='text-center'>WJC</h3>
                            <div className='d-flex justify-content-evenly'>
                             <WJCgroupA />
                             <WJCgroupB/>
                            </div>
                          </>
                        )
                       }

                       {
                        selectedLeague === 'khl' && (
                          <>
                           <h3 className='text-center'>KHL</h3>
                          <div className='d-flex justify-content-evenly'>
                             <EasternKHL/>
                             <WesternKHL/>
                          </div>
                          </>
                        )
                       }

                       {
                        selectedLeague === 'wch' && (
                          <>
                           <h3 className='text-center'>WCH</h3>
                           <div className='d-flex justify-content-evenly'>
                              <p className='fs-5 fw-semibold text-center'>Coming Soon</p>
                           </div>
                          </>
                        )
                       }

                       {
                        selectedLeague === 'og' && (
                          <>
                            <h3 className='text-center'>OG</h3>
                            <div className='d-flex justify-content-evenly'>
                              <p className='fs-5 fw-semibold text-center'>Coming Soon</p>
                           </div>
                          </>
                        )
                       }
          </div>

        </div>

         <Link href={'/'}
               className='btn btn-primary vstack mx-auto rounded-1'
               style={{textDecoration: 'none', width: '200px'}}>
            Home Page
         </Link>

        
        </div>

   


      <style>{`

      .hover:hover {
        background-color: #ffffff;
      }

      .main-container {
          display: grid;
          grid-template-columns: max-content 1fr max-content;
          gap: 0; 
        }

        .side-column {
          min-width: 300px;
          background: #f0f0f0;
        }

        .left-side-column {
           max-width: 200px;
           padding-left: 30px;
        }

        .middle-column {
          
        }
       
        .team-box {
          position: relative;
          padding: 16px 0!important;
   
        }

       .team-box:nth-child(even) { 
              background-color: #f7f7f7;
          }

       .team-box:nth-child(odd) { 
              background-color: #ffffff;
          }
      
      `}</style>
    </>
  )
        }



/* 

d6d5dbc87cmsh5634c57b4efd5b5p1af87bjsn95fbf2d4a0c5
*/

export default Home